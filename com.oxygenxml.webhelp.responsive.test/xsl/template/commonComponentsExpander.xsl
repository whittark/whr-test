<?xml version="1.0" encoding="UTF-8"?>
<!--
    
Oxygen Webhelp plugin
Copyright (c) 1998-2017 Syncro Soft SRL, Romania.  All rights reserved.

-->
<!-- Used to expand Webhelp components that are common to all templates: topic, search, main.  -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:oxy="http://www.oxygenxml.com/functions"
    xmlns:relpath="http://dita2indesign/functions/relpath"
    xmlns:whc="http://www.oxygenxml.com/webhelp/components"
    xmlns:toc="http://www.oxygenxml.com/ns/webhelp/toc"
    xmlns:oxygen="http://www.oxygenxml.com/functions"
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:index="http://www.oxygenxml.com/ns/webhelp/index"
    exclude-result-prefixes="#all"
    version="2.0">
    
    <xsl:param name="FILEDIR"/>
    <xsl:param name="FILENAME"/>
    <xsl:param name="TEMPDIR"/>
    <xsl:param name="WEBHELP_TOP_MENU_TEMP_FILE_URL"/>

    
    <!-- Merge the content of the template head element with the head element generated by DITA-OT -->
    <xsl:template match="html:head" mode="copy_template">
        <xsl:param name="ditaot_topicContent" tunnel="yes" as="node()*"/>
        <xsl:copy>
            <!-- EXM-36084 generate linkf for favicon -->
            <xsl:call-template name="generateFaviconLink"/>
          <!--  <xsl:call-template name="customHeader"/>-->
            <xsl:choose>
                <xsl:when test="exists($ditaot_topicContent)">
                    <!-- head element from dita-ot document -->
                    <xsl:variable name="ditaot_head" select="$ditaot_topicContent//html:head"/>
                    
                    <!-- Merge the attributes from the template head element with attributes from the head element produced by DITA-OT-->
                    <xsl:variable name="mergedAttributes"
                        select="oxy:mergeHTMLAttributes('head', @*, $ditaot_head/@*)"/>
                    <xsl:copy-of select="$mergedAttributes"/>               
                  
                    <!-- EXM-36084 - Move the custom CSS at end -->
                    <xsl:variable name="customCssLink" as="element()?">
                        <xsl:if test="string-length($CSS) > 0">
                            <xsl:variable name="cssFileName" select="relpath:getName($CSS)"/>
                            <xsl:copy-of select="$ditaot_head/html:link[contains(@href, $cssFileName)]"/>
                        </xsl:if>
                    </xsl:variable>
                    
                    
                    <!-- Copy all node from the head element generated by DITA-OT except custom CSS-->
                    <xsl:copy-of select="$ditaot_head/node()[local-name() ne 'link'][local-name() ne 'script']"/>

                    <xsl:call-template name="generatePathToRootMeta"/>
                    <xsl:call-template name="add-toc-id"/>

                    <!-- Copy template head content -->
                    <xsl:apply-templates select="node()" mode="#current"/>
                    
                    <!-- 
                        EXM-37429 - Maintain backwards compatibility: Generate links to skin resources 
                        for older templates that do not include the dedicated component.
                    -->
                    <xsl:if test="not(whc:webhelp_skin_resources)">
                        <xsl:call-template name="addLinksToSkinResources"/>
                    </xsl:if>
                    
                    <!-- EXM-36084 - Move custom CSS at end -->
                    <xsl:if test="exists($customCssLink)">                      
                      <xsl:copy-of select="$customCssLink"/>
                    </xsl:if>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:call-template name="generatePathToRootMeta"/>
                    <!-- Copy template head content -->
                    <xsl:apply-templates select="@* | node()" mode="#current"/>
                    
                    <!-- Page title -->
                    <title>
                        <xsl:variable 
                            name="mainBookTitle" 
                            select="$mapTitle[contains(@class, 'booktitle')]/*[contains(@class, 'mainbooktitle')]"/>                        
                        <xsl:choose>
                            <xsl:when test="exists($mainBookTitle)">
                                <xsl:value-of select="$mainBookTitle"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="$mapTitle"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </title>

                    <!-- 
                        EXM-37429 - Maintain backwards compatibility: Generate links to skin resources 
                        for older templates that do not include the dedicated component.
                    -->
                    <xsl:if test="not(whc:webhelp_skin_resources)">
                        <xsl:call-template name="addLinksToSkinResources"/>
                    </xsl:if>
                    
                    <!-- EXM-36084 generate user custom CSS for main page  -->
                    <xsl:call-template name="generateCustomCSSLink"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:copy>
    </xsl:template>
    
    <!-- 
        Expand the 'webhelp_indexterms_link' to a link to the indexterms.html page.
    -->
    <xsl:template match="whc:webhelp_indexterms_link" mode="copy_template">
        <xsl:if test="oxy:getParameter('webhelp.show.indexterms.link') = 'yes'">
            <xsl:if test="oxygen:getParameter('indexterms.available') = 'true'">
                <xsl:variable name="indexterms_link">
                    <div>
                        <xsl:call-template name="generateComponentClassAttribute">
                            <xsl:with-param name="compClass">wh_indexterms_link</xsl:with-param>                
                        </xsl:call-template>
                        <xsl:copy-of select="@* except @class"/>                        
                        <a href="{concat($PATH2PROJ, 'indexTerms', $OUTEXT)}">
                            <xsl:attribute name="title">
                                <xsl:call-template name="getWebhelpString">
                                    <xsl:with-param name="stringName" select="'webhelp.index'"/>
                                </xsl:call-template>                                             
                            </xsl:attribute><span>
                                <xsl:call-template name="getWebhelpString">
                                    <xsl:with-param name="stringName" select="'webhelp.index'"/>
                                </xsl:call-template> 
                            </span></a>            
                    </div>        
                </xsl:variable>
                
                <xsl:call-template name="outputComponentContent">
                    <xsl:with-param name="compContent" select="$indexterms_link"/>
                    <xsl:with-param name="compName" select="local-name()"/>
                </xsl:call-template>
            </xsl:if>
        </xsl:if>
    </xsl:template>
    <!--
        WebHelp logo component
    -->
    <xsl:template match="whc:webhelp_logo" mode="copy_template">
        <!-- If the target of the logo is not specified, use the relative path to the index.html page. -->
        <xsl:variable name="href">
            <xsl:choose>
                <xsl:when test="$WEBHELP_LOGO_IMAGE_TARGET_URL"><xsl:value-of select="$WEBHELP_LOGO_IMAGE_TARGET_URL"/></xsl:when>
                <xsl:otherwise><xsl:value-of select="concat($PATH2PROJ, 'index', $OUTEXT)"/></xsl:otherwise>                
            </xsl:choose>
        </xsl:variable>
        
        <xsl:variable name="logoComp">
            <a href="{$href}" target="_blank">          
                <xsl:call-template name="generateComponentClassAttribute">
                    <xsl:with-param name="compClass">wh_logo</xsl:with-param>
                </xsl:call-template>
                <!-- Copy attributes -->
                <xsl:copy-of select="@* except @class"/>
                
                <xsl:choose>
                    <xsl:when test="string-length($WEBHELP_LOGO_IMAGE) > 0 
                        and contains($WEBHELP_LOGO_IMAGE, ':/')">
                        <img src="{$WEBHELP_LOGO_IMAGE}" alt="{$mapTitle}"/>
                    </xsl:when>
                    
                    <xsl:when
                        test="string-length($WEBHELP_LOGO_IMAGE) > 0">
                        <img src="{concat($PATH2PROJ, $WEBHELP_LOGO_IMAGE)}" alt="{$mapTitle}"/>
                    </xsl:when>
                </xsl:choose>        
            </a>
        </xsl:variable>
        
        <xsl:call-template name="outputComponentContent">
            <xsl:with-param name="compContent" select="$logoComp"/>
            <xsl:with-param name="compName" select="local-name()"/>
        </xsl:call-template>
        
    </xsl:template>
   
</xsl:stylesheet>